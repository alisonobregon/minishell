ls -la
<<<<<<< HEAD
export
export | grep USER
export | grep USER
/bin/export | grep USER
env | grep USER
exit | grep USER
pwd | grep hla
cd
ls
export hola
export hola
export hola
export hola
export
export hola
export
export hola=value1 hola2 hola3=
export
export hola=value1 hola2 hola3=
export
cat
                                                                                       
< Makefile cat ./include/minishell.h  .history | grep hola | wc -l > output
cat output 
< Makefile cat ./include/minishell.h  .history
ls > ls > out >> out2 < cat Makefile < Makefile -e << END ls
ls Makefile 
ls Makefile -e
ls Makefile ls
ls > ls > out >> out2 < cat Makefile < Makefile -e << END ls
cat out2
clear
cat out2
ls > ls > out >> out4 < cat Makefile < Makefile -e << END ls
cat out4
exit
ls > ls > out >> out4 < cat Makefile < Makefile -e << END ls
ls >> out4 Makefile ls
ls >> out4 Makefile > out2 ls
lss
ls
ls >> out4 Makefile > out2 ls
ls >> out4 Makefile > out ls
ls >> out4 Makefile > out > out3
ls >> out4 Makefile > out > out3
ls >> out4 Makefile > out > out3
ls >> out4 Makefile > out > out3
ls >> out4 Makefile > out > out3
ls >> out2 > out ls
ls >> out2 > out3 ls
lss >> out2 > out23
ls >> out2 > out23
ls > out333 > out23
ls > out333 > out23
ls > out > out2
ls > out33 > out33
ls > out33 > out34
ls > out32 > out366
ls >> out > out1 >> out2 ls << END < inf -e
ls >> out > out1 >> out2 ls 
ls >> out > out1 >> out2 ls << END
ls >> out > out1 >> out2 ls < inf << END
ls >> out > out1 >> out2 ls < inf << END
ls >> out > out1 >> out2 ls < inf << END
ls >> out > out1 >> out2 ls  << END
ls >> out > out1 >> out2  << END
ls >> out > out1 >> out2  ls << END
ls >> out > out1 >> out2  ls << END
ls >> out > out1 >> out2  << END
ls >> out > out1 >> out2  ls  << END
                                                               
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
asd
l
 
 
l
l
l
l
l
l
l
export hola
export hola
export hola
export hola
export hola
ls
export hol
export hola
export
export hola=2
export
export hola=3
export
export hola=1
export
export hola=3
export var1=v1 var2=v2 var3=v3
ake
k
export hola=1 hola2=2
ls -la
export hola hola2=v2 hola3=
export hola
export
export hola=val1
export
export hola=val3
export
export hola=val434 var1=value1
export hola hola2
export hola=var1 hola2=var2
export
./minishell 
export hola
export hola=val1 hola2=value2
export
export hola=val4 hola2=value4
export hola
export hola=val1 hola2=value2
export
export hola
export hola=val1
export
export hola
export hoal=val1
export
export hola=val1
export
export hola
export hola=val1
export hola
export hola=value1
export hola
export hola=var1
export
export hola
export hola=var1
export hola
export hola=var1
export
export hola=var3
export
export hola=var4
export
expor
export
export
export hola
export hola=var1
export
export hola=var2
export
export hola=var3
export
export hola=var3 hola1=var4
export
export hola=var1
export
export hola
export hola=var1
export
export hola
export
export hola
export hola
export
export hola
export
export hola
export hola
export
export hola=va1
export
./minishell 
export hola
export hola=va1
export
export hola
export hola
export hola
export hola
export hola=v1
export hola
export hola=v1
export hola
export hola=v1
export hola
export hola=v1
export hola
export hola
export hola=v1
export
export hola
export hola2
export hola
export hola2
export hola
export hola2
export hol<
export hola
export hola2
export  hola
export hola2
export hola2 hola
export hola2=value1
export hola1 hola2=v2 hola3=v3 hola4
export hola1 hola2=v2 hola3=v3 hola4 hola2
export hola
export hola
export hola2
export hola2=v2
export hola=v1
export hola=v5 hola2=v534 hola= hola123123
export hola=v5 hola2=v534 hola= hola123123
export hola
hola
export hola
export hola
export hola2
export hola
export hola
export hola
hola
export hola
export hola
export hola
export hola
export hola
export hola
export hola2
export hola2=v1
export hola
export hola
export hola1
export hola=v1
export hola
export hola1
hola=value1
export hola
export hola
export hola1
export hola1=va
export hola1=va2
export hola=va1
export
hola
export hola
export hola1
hola=v1
./minishell 
export hola
export hola
export hola
export holA1
export hola=va
export hola
export hola=v1
hola 
export hola
export hola
hola=v1
export hola=v1
export hola
export hola
export hola
export hola1
export hola=v1 hola1=v2
export hola1=v3
export hola1
                                                                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
make clean
make fclean
export var
export var=v1
export var
var=v1
./minishell 
export var1
var1=v1
export var1=v1
export var var2 var3=v3
export hola
export hola=1
export hola
export hola
export hola=v1
export hola
export hola
export hola
export hola
export hola=v1
export hola
export hola=v1
export hola
export hola
pwd
ls
export
export hola
export hola
export
export hola
export hola
export hola
export hola
export hola
export hola=v1
export hola
export hola
export hola
export hola=v1
export hola
export hola
export hola=V1
export hola=V1
export hola=V2
export hola=V3
export hola
export hola=v1
export hola
export hola
export hola=v1
export hola
export hola1
export hola
export hola
export hola=v1
export hola
export hola
export hola
export hola
export hola
export hola
export hola
export
export hola
export hola
export
export hola
export hola
export
export hola
export hola
export
export hola
export hola
export
export hola
export
export hola
export hola
export
export hola
export hola
export
export
export hola
export hola
export
export hola=v1
export hola
export hola
export hola=V1
export hola
export hola1
export hola2
export hola2=v1
export hola
export hola1
export hola=v1
export hola1=v2
export hola hola1=v1 hola2=v2 hola3=v3
export hola
export hola
export hola1
export hola2=V2 hola=v1
export hola2=V2 hola1=v0
export hola2=V2 hola1=v0 new=new1
export hola= hola2=v02 hola1=v055 new=
export hola
export hola=v1
export hola
export
export hola
export hola
export
export hola=v1
export
export hola
export
export hola
export hola=v1
export
export hola
export
export hola
export hola=v1
export
export hola
export
export hola
export hola1=v1 hola= hola2=v2
export
unset hola
export
unset hola1 hola2
export
unset hola
export
export | grep HOME
export | grep HOME
export > out1
export > put1
export out1
export > out1
asd
ls -la | export > out1
export
export > out1
export > out1
export > out1
export > out1
export > out1
export > out1
export > out1
export > out1
export > out2
das
asd
asd
export
export > out1
export
export > out1
export > out1
< Make export > out1
< Make export > out1
< Makefile export > output
DEFAULT= \033[0;39m
GRAY= \033[0;90m
RED= \033[0;91m
GREEN= \033[0;92m
YELLOW= \033[0;93m
BLUE= \033[0;94m
MAGENTA= \033[0;95m
CYAN= \033[0;96m
WHITE= \033[0;97m
NAME= minishell
SRC=./src/minishell.c \
./src/built-ins/builtins-utils.c \
./src/built-ins/export.c \
./src/built-ins/unset.c \
./src/built-ins/env.c \
./src/built-ins/exit.c \
./src/built-ins/cd.c \
./src/built-ins/echo.c \
./src/parsing/parsing.c \
./src/parsing/checker.c \
./src/parsing/utils_parsing.c \
./src/parsing/create_command.c \
./src/parsing/outfiles.c \
./src/parsing/pipes.c \
./src/utils/utils.c \
./src/utils/utils2.c \
./src/exec/exec_utils.c \
./src/exec/exec.c \
./src/exec/get_path.c \
./src/exec/redirections.c \
./src/exec/here_doc.c \
./src/exec/free_exec.c \
./src/prompt/prompt_utils.c \
./src/prompt/prompt.c \
./src/signals/signals.c \
OBJ= $(SRC:.c=.o)
INCLUDES = -I/mingw64/include
CFLAGS = -Wall -Werror -Wextra $(INCLUDES) -g3 -fsanitize=address,leak
FLAGS = -L/mingw64/lib -lreadline -lhistory -ltermcap
CC = cc
#-no-pie
all: $(NAME) show_progress
$(NAME): $(OBJ)
@make -s -C libft
$(CC) $(OBJ) $(CFLAGS) $(FLAGS) -L libft -lft -o $(NAME)
debug: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes --track-origins=yes --leak-check=full ./$(NAME)
fd: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes ./$(NAME)
run: $(NAME)
make && ./$(NAME)
lsl -la > output
ls -la > output
export > out
export > out
export > out
export > out
< Makefile cat
DEFAULT= \033[0;39m
GRAY= \033[0;90m
RED= \033[0;91m
GREEN= \033[0;92m
YELLOW= \033[0;93m
BLUE= \033[0;94m
MAGENTA= \033[0;95m
CYAN= \033[0;96m
WHITE= \033[0;97m
NAME= minishell
SRC=./src/minishell.c \
./src/built-ins/builtins-utils.c \
./src/built-ins/export.c \
./src/built-ins/unset.c \
./src/built-ins/env.c \
./src/built-ins/exit.c \
./src/built-ins/cd.c \
./src/built-ins/echo.c \
./src/parsing/parsing.c \
./src/parsing/checker.c \
./src/parsing/utils_parsing.c \
./src/parsing/create_command.c \
./src/parsing/outfiles.c \
./src/parsing/pipes.c \
./src/utils/utils.c \
./src/utils/utils2.c \
./src/exec/exec_utils.c \
./src/exec/exec.c \
./src/exec/get_path.c \
./src/exec/redirections.c \
./src/exec/here_doc.c \
./src/exec/free_exec.c \
./src/prompt/prompt_utils.c \
./src/prompt/prompt.c \
./src/signals/signals.c \
OBJ= $(SRC:.c=.o)
INCLUDES = -I/mingw64/include
CFLAGS = -Wall -Werror -Wextra $(INCLUDES) -g3 -fsanitize=address,leak
FLAGS = -L/mingw64/lib -lreadline -lhistory -ltermcap
CC = cc
#-no-pie
all: $(NAME) show_progress
$(NAME): $(OBJ)
@make -s -C libft
$(CC) $(OBJ) $(CFLAGS) $(FLAGS) -L libft -lft -o $(NAME)
debug: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes --track-origins=yes --leak-check=full ./$(NAME)
fd: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes ./$(NAME)
run: $(NAME)
make && ./$(NAME)
ls -la
ls -la > output
ls -la > out
ls -la
ls -la > out
ls -la > out1 > out2
ls -la | grep Makefile 
ls -la
ls -la | grep Makefile 
ls -la | grep Makefile 
ls -la
export
ls -la
ls -la | grep Makefile 
ls -la
ls -la | grep Makefile 
export > out
ls -la | grep Makefile | wc -l
cat < Makefile |  grep exec
DEFAULT= \033[0;39m
GRAY= \033[0;90m
RED= \033[0;91m
GREEN= \033[0;92m
YELLOW= \033[0;93m
BLUE= \033[0;94m
MAGENTA= \033[0;95m
CYAN= \033[0;96m
WHITE= \033[0;97m
NAME= minishell
SRC=./src/minishell.c \
./src/built-ins/builtins-utils.c \
./src/built-ins/export.c \
./src/built-ins/unset.c \
./src/built-ins/env.c \
./src/built-ins/exit.c \
./src/built-ins/cd.c \
./src/built-ins/echo.c \
./src/parsing/parsing.c \
./src/parsing/checker.c \
./src/parsing/utils_parsing.c \
./src/parsing/create_command.c \
./src/parsing/outfiles.c \
./src/parsing/pipes.c \
./src/utils/utils.c \
./src/utils/utils2.c \
./src/exec/exec_utils.c \
./src/exec/exec.c \
./src/exec/get_path.c \
./src/exec/redirections.c \
./src/exec/here_doc.c \
./src/exec/free_exec.c \
./src/prompt/prompt_utils.c \
./src/prompt/prompt.c \
./src/signals/signals.c \
OBJ= $(SRC:.c=.o)
INCLUDES = -I/mingw64/include
CFLAGS = -Wall -Werror -Wextra $(INCLUDES) -g3 -fsanitize=address,leak
FLAGS = -L/mingw64/lib -lreadline -lhistory -ltermcap
CC = cc
#-no-pie
all: $(NAME) show_progress
$(NAME): $(OBJ)
@make -s -C libft
$(CC) $(OBJ) $(CFLAGS) $(FLAGS) -L libft -lft -o $(NAME)
debug: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes --track-origins=yes --leak-check=full ./$(NAME)
fd: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes ./$(NAME)
run: $(NAME)
make && ./$(NAME)
ls -la
ls -la | grep Makefile 
ls -la > out
ls -la > out
ls -la
< Makefile cat
cat < Makefile 
cat < Makefile  | grep exec > out
ls -la
cat < Makefile | grep src
export
export > out
export
cd ..
env                                                                                                                                                                                                
env
export | grep USER
export | grep USER
export | grep HOME
export | grep HOME
export | grep HOME
export | grep HOME
export | grep USER
export | grep USER
export
export | grep WSL
export | grep WSl
export | grep WSL
env | WSL
env | grep WSL
env | grep HOME
export | grep WSL
export | grep USER
export > out
das
dasd
asd
export > out
export
< Makefile cat
DEFAULT= \033[0;39m
GRAY= \033[0;90m
RED= \033[0;91m
GREEN= \033[0;92m
YELLOW= \033[0;93m
BLUE= \033[0;94m
MAGENTA= \033[0;95m
CYAN= \033[0;96m
WHITE= \033[0;97m
NAME= minishell
SRC=./src/minishell.c \
./src/built-ins/builtins-utils.c \
./src/built-ins/export.c \
./src/built-ins/unset.c \
./src/built-ins/env.c \
./src/built-ins/exit.c \
./src/built-ins/cd.c \
./src/built-ins/echo.c \
./src/parsing/parsing.c \
./src/parsing/checker.c \
./src/parsing/utils_parsing.c \
./src/parsing/create_command.c \
./src/parsing/outfiles.c \
./src/parsing/pipes.c \
./src/utils/utils.c \
./src/utils/utils2.c \
./src/exec/exec_utils.c \
./src/exec/exec.c \
./src/exec/get_path.c \
./src/exec/redirections.c \
./src/exec/here_doc.c \
./src/exec/free_exec.c \
./src/prompt/prompt_utils.c \
./src/prompt/prompt.c \
./src/signals/signals.c \
OBJ= $(SRC:.c=.o)
INCLUDES = -I/mingw64/include
CFLAGS = -Wall -Werror -Wextra $(INCLUDES) -g3 -fsanitize=address,leak
FLAGS = -L/mingw64/lib -lreadline -lhistory -ltermcap
CC = cc
#-no-pie
all: $(NAME) show_progress
$(NAME): $(OBJ)
@make -s -C libft
$(CC) $(OBJ) $(CFLAGS) $(FLAGS) -L libft -lft -o $(NAME)
debug: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes --track-origins=yes --leak-check=full ./$(NAME)
fd: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes ./$(NAME)
run: $(NAME)
make && ./$(NAME)
export | grep USER
export | grep USER
echo "hola que tal" | grep hola
echo hola
echo "hola que tal" | grep hola
echo "test" > out
echo " test2 " > out
dcdahora
echo hola 
echo  vamos a ver > out2
porque cpño
adsas
dasdad
asd
ad
export
export > out
ahora todo esta en el archivo
delete
export > out
export > out
export > out
export > out
export > out
cat out 
export > out2
cat out2
export
export > out
env > out2
cd ..
ls -la
ls -la | grep Makefile 
export | grep USER
export | grep USER
ls -la | grep Makefile 
export | grep USER
ls -la | grep Makefile 
ls -la | grep Makefile > out | export
ls -la | grep Makefile > out | export
export | grep USER
export > output
cat out
cat output
ls -la | export > out2 | ls -la | grep Makefile 
cat out2
cat out2
ls
ls  -la
export
echo hola
ls -la
echo hola
 
l
export | grep USER
ls -la | export | grep USER
export | grep HOME
echo $HOME
$HOME
sleep 1 | export | grep HOME
sleep 1 | export | grep USER
export | grep USER
ls -la | export | grep USER
ls -la | export > out | grep USER
cat out
ls
cat out
export | grep USER
ls -la | export | grep USER
l
ls -la
cd
export
export Milica=26
export | grep 
export | grep Milica
export | grep Milica > output
cat output
< Makefile  cat > output | sleep 3 | ls -la
echo "hola"
echo "hola -n
echo "hola" -n
echo -n "hola"
ls -la | grep Makefile 
echo $?
./minishell 
ls
./minishell 
holaaa
echo hola
echo "$HOME"
echo hola
echo hola
echo hola
echo sad
sad
e
echo
sadsa
 dasds adss
echo hola+
echo hola
echo "asdsad"
echo "asdsad $asda"
echo "asdsad $HOME"
echo "asdsad $HOME/$HOME"
LS
ls
cat Makefile 
cat Makefile > out
cat Makefile > out >> out2
cat Makefile > out >> out2
cat < src/parsing/parsing  > out >> out2
cat < src/parsing/parsing.c  > out >> out2
cat < src/parsing/parsing.c  > out >> out2 | grep
cat < src/parsing/parsing.c  > out >> out2 | grep parsing
cat < src/parsing/parsing.c | grep parsing
cat < src/parsing/parsing.c | echo Hola
cat < src/parsing/parsing.c | echo Hola | wc -l
cat < src/parsing/parsing.c | echo Hola | export
cat < src/parsing/parsing.c < Makefile
cat < src/parsing/parsing.c < Makef
echo HOla > ""
echo HOla > ''
echo HOla > "out"1
bash
echo hola
echo mio
echo mio
echo -n hola
echo -nn hola12
echo --nn hola12
cat << end
cat << end
cat << end
cat << end
echo >> hola
echo << hola
echo << end
asd
echo << end
echo << end
sd
echo << end
cat << end
ls
la
ls -la
echo "$HOME/$PWD"
echo "$HOME $PWD"
echo "$HOME $PWD" $/$
echo "$HOME $PWD" $//$
export
export a=a
export
a=
export
export a=a
export a=
export
echo "hola que tal" > out1
cat out1
export
export  "test=ls -la | grep Makefile > out1"
echo test
echo $test
echo "cat lol.c | cat > lol.c"
cat lol.c | cat > lol.c
ls
export > out
cat out
cat << end
cat << end
cat << end
cat << end
cat << end
ajjs
cat << end
cat << end
cat "
cat
cat
cat
hgygu
cat
cat
cat
cat
cat
cat
cat
cat
cat
cat
cat << end
echo | 
cat
echo |
echo dasdsa|
echo |
echo "
echo "
echo "
echo "
echo "
dcjopczopcpzxojcpxzpcpzxczxc
cat << hola
cat << end
echo sadas |
echi asdsad |
cat << end
cat << end
cat << end
cat << end
cat << end
echo << end
asdsadas
cat <<  end
cat <<  end
cat << end
cat << end
cat << end
cat << end
cat << end
cat << end
cat Makefile 
cat << end
cat << end
echo |
echo "
echo $?
echo asdsad
ech
echo $?
ecsad
echo $?
echo "
"
echo "
echo "
echo "
echo "
echo $?
ech
echo $?
<<<<<<< HEAD
export test=a
asd
asdas 
export
cat ª·─::_ÑP^DDGDFªª!"·$%&/()=)==?^*¨Ñ
cat << her
cat << her
cat < Makefile << her
make clean
make fclean
echo hola
ls
cat << asdas
cat << asdas < Makefile
cat << asdas < Makefile > out1 > out2
echo hola
export
export test=$HOME
export
=======
>>>>>>> origin/gonzo
/bin/ls
minishell
<<<<<<< HEAD
ls
./minishell 
./minishell 
./minishell 
'ls'
ls
ls
cat << ls
cat << ls
ls
echo hola
sñdsa
make
ls
cat << end
'ls'
'        ls        '
make clean
ls
ls
ls
cd ..
ls
cd
cd ..
' ls '
./minishell 
cat << ms
cat 'ms'
cat << 'ms'
cat << '   ms     '
cat < 'Makefile'
./minishell 
=======
                                                                                                                               
ls -la
ls -la > output
cat output 
                                                                                                                            
echo "hola"
echo "hola"
export "test=ls -la | grep Makefile | wc -l"
echo test
echo $test
$test
ls -la
export "cd=../../../"
cd $cd
ls -la
ls -la | grep Makefile
ls
ls -la
l
cat Makefile 
ls -la | grep Makefile 
echo $?
echo "HOla" -n
echo -n "HOla" 
echo -  n "HOla" 
echo-n
./minishell 
/bin/ls
/bin/ls -la
"bin/ls -la"
"/bin/ls -la"
l
l
l
l
l
l
ls -la
ls -la | grep Makefile 
export
ls -la | export
ls -la | grep Makefile 
echo $?
=======
./minishell
export 2v
expot 2v
export 2v
export 2v

< Makefile echo "hola" > out "
<< end
cat << end
>>>>>>> origin/gonzo
<< end
ls -la
ls -la | grep Makefile 
< Makefile echo hola
< Makefile echo hola > out
ls -al
make fclean
<<<<<<< HEAD
minishell
                                                                                                                                                           ls -la
ls -la
ls -la
                                                                                                                  
cat << end > output
cat output 
export > out > out2 > out3
export > output > out2 > out3
ls -la | grep Makefile 
sleep 3 | ls -la > output | cat << end > out
echo hola > out
minishell
./minishell 
exit 240
echo $?
ls -la
export | grep USER
./minishell 
exit 100
echo $?
./minishell 
ls -la | grep Makefile 
echo $?
exit 100
export | SHLVL
export | grep SHLVL
export | grep SHLVL
./minishell 
./minishell 
env
export
export v1
export
export v1=valu1 v2=v2
export
ls
ls -la
ls -la
echo $?
ls -la
echo $?
grep
echo $?
ls -la
echo $?
grep
echo $?
ls -la | grep
echo $?
ls -la | export
echo $?
ls -la | export
echo $?
ls -la | export
ls -la | export
echo $?
ls -la | grep Makefile 
ls -la
ls -la | grep Makefile 
ls -la | grep Makefile 
ls -al
ls -la
grep
echo $?
./minishell 
exit 100
echo $?
./minishell 
exit 20
echo $?
./minishell 
exit 20
echo $?
ls
ls -la
ls -la > out
cat out 
cat " hola que tal
echo "hola
echo 'hola'
echo "hola"
./minishell 
export
./minishell 
ls -la
echo $?
ls -la | grep
echo $?
exit 100
echo $?
echo $?
echo $?
./minishell 
exit 100
./minishell 
exit 100
./minishell 
exit 100
./minishell 
./minishell 
ls -la
echo $?
ls -la | grep
echo $?
exit 100
echo $?
./minishell 
exit 100
echo $?
./minishell 
unset asd1 asd2 asd3
unset
unset abc
unset "abc"
unset "abc "
export
unset wsl
unset WS
export
export
export > out
cat out 
echo "hola que tal " > out
< Makefile echo hola que tal
DEFAULT= \033[0;39m
GRAY= \033[0;90m
RED= \033[0;91m
GREEN= \033[0;92m
YELLOW= \033[0;93m
BLUE= \033[0;94m
MAGENTA= \033[0;95m
CYAN= \033[0;96m
WHITE= \033[0;97m
NAME= minishell
SRC=./src/minishell.c \
./src/built-ins/builtins-utils.c \
./src/built-ins/export.c \
./src/built-ins/unset.c \
./src/built-ins/env.c \
./src/built-ins/exit.c \
./src/built-ins/cd.c \
./src/built-ins/echo.c \
./src/parsing/parsing.c \
./src/parsing/checker.c \
./src/parsing/utils_parsing.c \
./src/parsing/create_command.c \
./src/parsing/outfiles.c \
./src/parsing/pipes.c \
./src/utils/utils.c \
./src/utils/utils2.c \
./src/exec/exec_utils.c \
./src/exec/exec.c \
./src/exec/get_path.c \
./src/exec/redirections.c \
./src/exec/here_doc.c \
./src/exec/free_exec.c \
./src/prompt/prompt_utils.c \
./src/prompt/prompt.c \
./src/signals/signals.c \
./src/parsing/quotes.c \
./src/parsing/env.c \
./src/prompt/init_text.c \
OBJ= $(SRC:.c=.o)
INCLUDES = -I/mingw64/include
CFLAGS = -Wall -Werror -Wextra $(INCLUDES) -g3 -fsanitize=address,leak
FLAGS = -L/mingw64/lib -lreadline -lhistory -ltermcap
CC = cc
#-no-pie
all: $(NAME) show_progress
$(NAME): $(OBJ)
@make -s -C libft
$(CC) $(OBJ) $(CFLAGS) $(FLAGS) -L libft -lft -o $(NAME)
debug: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes --track-origins=yes --leak-check=full ./$(NAME)
fd: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes ./$(NAME)
run: $(NAME)
make && ./$(NAME)
< out echo "hola"
hola que tal 
asd
asds
asda
sda
sdad
sads
asd
< Makefile echo hola
< Makefile echo hola
DEFAULT= \033[0;39m
GRAY= \033[0;90m
RED= \033[0;91m
GREEN= \033[0;92m
YELLOW= \033[0;93m
BLUE= \033[0;94m
MAGENTA= \033[0;95m
CYAN= \033[0;96m
WHITE= \033[0;97m
NAME= minishell
SRC=./src/minishell.c \
./src/built-ins/builtins-utils.c \
./src/built-ins/export.c \
./src/built-ins/unset.c \
./src/built-ins/env.c \
./src/built-ins/exit.c \
./src/built-ins/cd.c \
./src/built-ins/echo.c \
./src/parsing/parsing.c \
./src/parsing/checker.c \
./src/parsing/utils_parsing.c \
./src/parsing/create_command.c \
./src/parsing/outfiles.c \
./src/parsing/pipes.c \
./src/utils/utils.c \
./src/utils/utils2.c \
./src/exec/exec_utils.c \
./src/exec/exec.c \
./src/exec/get_path.c \
./src/exec/redirections.c \
./src/exec/here_doc.c \
./src/exec/free_exec.c \
./src/prompt/prompt_utils.c \
./src/prompt/prompt.c \
./src/signals/signals.c \
./src/parsing/quotes.c \
./src/parsing/env.c \
./src/prompt/init_text.c \
OBJ= $(SRC:.c=.o)
INCLUDES = -I/mingw64/include
CFLAGS = -Wall -Werror -Wextra $(INCLUDES) -g3 -fsanitize=address,leak
FLAGS = -L/mingw64/lib -lreadline -lhistory -ltermcap
CC = cc
#-no-pie
all: $(NAME) show_progress
$(NAME): $(OBJ)
@make -s -C libft
$(CC) $(OBJ) $(CFLAGS) $(FLAGS) -L libft -lft -o $(NAME)
debug: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes --track-origins=yes --leak-check=full ./$(NAME)
fd: $(NAME)
@valgrind -s --trace-children=yes --track-fds=yes ./$(NAME)
run: $(NAME)
make && ./$(NAME)
< Makefile echo "hola"
< Makefile echo "hola"
< Makefile echo hola
<< end
< Makefile cat > out > out2 | ls -la > out | cat < Makefile 
cat out
cat out2
< Makefile cat > out > out2 | ls -la > out |  sleep 2 | cat < Makefile 
< Makefile cat > out > out2 | ls -la > out |  sleep 2 | cat < Makefile 
< Makefile cat > out > out2 | ls -la > out |  sleep 2 | cat < Makefile 
ls -la
echo vamos a ver qlq > out
cat out
l
l
echo $?
ls -la | l
echo $?
ls -la | grep Makefile 
ls -la | grep
echo $?
ls -la | l
                                                                                                                                            
< Makefile echo "hola"
< Makefile echo "hola" > out
cat out
< Makefile echo "hola" > out
>>>>>>> origin/gonzo
ls
< Makefile cat
< Makefile cat
< Makefile echo > out
 < Makefile echo 
 < Makefile cat
< Makefile echo > out
< Makefile cat > out
< Makefile cat > out
< Makefile cat
< Makefile cat > out
< Makefile cat
< Makefile cat
< Makefile cat
< Makefile cat > out
< Makefile cat
< Makefile cat > out
< Makefile cat > out
< cat Makefile
< Makefile cat
> Makefile cat
> out cat
echo > out > out1
cat < Makefile > out >> out1 << end
cat < Makefile > out >> out1 << end sdsdsd
< Makefile > out >> out1 << end sdsdsd
< Makefile > out >> out1 << end cat
< Makefile > out >> out1 << end cat
< Makefile cat
< Makefile cat > out
< Makefile cat
< Makefile cat > out
< Makefile cat > out
minishell
minishell
./minishell 
exit 200
echo $?
ls -la | grep Makefile 
echo $?
ls -la | grep
echo $?
echo "hola que tal " > out
cat out
echo "hola que tal " > out
cat out
< Makefile echo "hola que tal" > out
cat out
echo "hola que tal " > out
<  Makefile cat > output
cat output 
<  Makefile echo "vamos a ver qlq" > output
cat output 
echo "vamos a ver qlq" > output
cat output 
echo "vamos a ver qlq" > output < out
cat output 
cat | ls -la
                                                                                                                                                                                                                                                                         
 
minishell
minishell
minishell
./minishell
export | grep SHLVL
export 2v
export
export 2v
minishell
ls -al  | grep Makefile 
ls -al  | grep Makefile
<< end
cat << end
< Makefile cat > output | sleep 2 | ls -la | grep Makefile | cat >  out2 > out3
cat < Makefile 
cat << 'end'
cat << end
cat << end
<< end
lsl
echo $?
ls -al | grep
echo $?
ls -la
echo $?
ls -al | grep Makefile 
echo $?
cat | ls
echo $?
cat Makefile | ls | sleep 2 | cat
cat Makefile | ls | sleep 2 | cat > out
cat out
=======
>>>>>>> origin/gonzo
minishell 
./minishell 
ls
cat < minishell
cat < Makefile 
echo "hola aaaaa $USER AAAAA" > out
< Makefile echo "hola" > out "< is taken as a cmd" 
< Makefile echo "hola" > out
export
export | grep USER
ls -la | export
echo $?
minishell
exit 20i0
echo $?
minishell
exit 200
echo $?
export
export | grep SHLVL
exit
minishell
echo Hola
echo -nnnn Hola
echo -nnna Hola
pwd
cd 
pwd
cd
cd
cd ..
cat Makefile > out
cat Makefile > out >> out2
cat Makefile > out >> out2
echo Hola > out >> out2
cat Makefile | grep PHONY
cat Makefile | grep PHONY | wc -l
cat | cat | cat 
cat 
cat 
cat 
./minishell 
ls
exit ebvbsvebsiubis
exit 1 2 3 
dfgm,
sleep 5 | sleep 5
sleep 5 | echo Hola | sleep 5
cat < Makefile < src/parsing/parsing.c
cat < Makefile > src/parsing/parsing.c
cat hola
cat Makefile 
cat
la
ls
<< end
<< end
>> end
>> end
<< end
<< end
a>b>c>d>e
>a>b>c>d>e
cat | cat | cat
cat | cat | cat
cat
cat
cat | cat | cat 
cat
cat | cat
cat
cat | cat
cat | cat
<<< wr rfjiosoifh
<< end 
make
<< end
>> end
<< end
<< end cat
>a>b>c>d>f
>a>b
>a>b>c
>a>b>c>d
>> end
<< end
<< end cat
cat < Makefile 
ls
>a>b>c>d>e>f
cat Makefile | grep PHONY
cat Makefile | grep PHONY
cat Makefile | grep PHONY | wc -l
cat < Makefile | grep PHONY > out
< Makefile echo "hola" > out
cat | cat | cat
cat | cat | cat
cat | cat | cat
cat |
"end
ls
'ls'
ls
ls -la
'ls' -la
ls
asdasd |
cat hola
adasdasdas
cat "
"
"
"
ls "
ls "
"
"
"
<< end
<< end
"
"
asda
"
ls "
ps
"
"ls
<< end
<< end
"
"
"
"
"
"
"
"
"
"
"
"
"
"sad
"
make
"
"
"
"
"
" ad
make
"as
2
"
"
"asd
"
"
"
"
"
"
"
ls |
echo "hola
echo "
"
"
asd"
ls
"
"
make
" 
"
"
"
"
make debug
"
"
"
"
"
"
"
"
